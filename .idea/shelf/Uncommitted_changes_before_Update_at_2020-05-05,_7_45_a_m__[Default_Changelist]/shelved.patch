Index: bd_universitaire/templates/graphique.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Bootstrap Agency Page Template</title>\n    <link rel=\"stylesheet\" href=\"../static/bootstrap-4.3.1.css\">\n\t  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.1/css/all.css\">\n    <style type=\"text/css\">\n    .connection {\n}\n    </style>\n  </head>\n  <body>\n<header>\n\t<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" href=\"Sanstitre-2.html\">Acceuil <span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"{{ url_for('Profile') }}\">Mon Compte</a>\n          </li>\n          <li class=\"nav-item dropdown\">\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n              <a class=\"dropdown-item\" href=\"#\">Action</a>\n              <a class=\"dropdown-item\" href=\"#\">Another action</a>\n              <div class=\"dropdown-divider\"></div>\n              <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n            </div>\n          </li>\n        </ul>\n        <form class=\"form-inline my-2 my-lg-0\">\n          <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Recherche\" aria-label=\"Search\">\n          <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n      </div>\n    </nav>\n  <script src=\"./js/jquery-3.3.1.min.js\"></script>\n<div class=\"jumbotron\">\n    <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <h1 class=\"text-center\">Réussite 2.0&nbsp; &nbsp;</h1>\n              <h1 class=\"text-lowercase text-center\"><strong>Le dash bord vous offre un overview sur votre session et votre programme d'étude</strong></h1>\n<p>&nbsp;</p>\n              <p class=\"text-center\"><a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a> </p>\n            </div>\n          </div>\n        </div>\n  </div>\n</header>\n    <section class=\"mainContent\">\n      <div class=\"text-center\">\n\t    <h1>Tableau des notes</h1>\n        <canvas id=\"chart\" width=\"600\" height=\"400\"></canvas>\n    <script>\n      // bar chart data\n      var barData = {\n        labels : [\n          {% for item in labels %}\n           \"{{ item }}\",\n          {% endfor %}\n\t],\n\n        datasets : [{\n          fillColor: \"rgba(151,187,205,0.2)\",\n          strokeColor: \"rgba(151,187,205,1)\",\n          pointColor: \"rgba(151,187,205,1)\",\n          data : [\n            {% for item in values %}\n               \"{{ item }}\",\n              {% endfor %}\n\t    ]\n          }\n        ]\n      }\n\n     // get bar chart canvas\n     var mychart = document.getElementById(\"chart\").getContext(\"2d\");\n\n       steps = 10\n       max = {{max}}\n\n     // draw bar chart\n     new Chart(mychart).Bar(barData, {\n       scaleOverride: true,\n       scaleSteps: steps,\n       scaleStepWidth: Math.ceil(max / steps),\n       scaleStartValue: 0,\n       scaleShowVerticalLines: true,\n       scaleShowGridLines : true,\n       barShowStroke : true,\n       scaleShowLabels: true\n       }\n     );\n\n    </script>\n      </div>\n    </section>\n    <footer class=\"text-center\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <p>Copyright © MyWebsite. All rights reserved.</p>\n          </div>\n        </div>\n      </div>\n    </footer>\n    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) --> \n    <script src=\"../static/jquery-3.3.1.min.js\"></script>\n    <!-- Include all compiled plugins (below), or include individual files as needed --> \n    <script src=\"../static/popper.min.js\"></script>\n    <script src=\"../static/bootstrap-4.3.1.js\"></script>\n  </body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- bd_universitaire/templates/graphique.html	(revision c613a6c42e4d78f74de928362f2c88c67af1b8da)
+++ bd_universitaire/templates/graphique.html	(date 1588678679274)
@@ -11,6 +11,7 @@
     .connection {
 }
     </style>
+      <script src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js'></script>
   </head>
   <body>
 <header>
Index: bd_universitaire/app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'''\nfrom flask import Markup\nfrom flask import Flask\nfrom flask import render_template\napp = Flask(__name__)\n\napp.config['MYSQL_HOST'] = 'localhost'\napp.config['MYSQL_USER'] = 'root'\napp.config['MYSQL_PASSWORD'] = 'pr@j?vision100%@$!'\napp.config['MYSQL_DB'] = 'bd_universitaire'\n\nmysql = MySQL(app)\n@app.route('/bd_universitaire/', methods=['GET', 'POST'])\ndef login():\n    return render_template('../mon site web/Sanstitre-2.html', msg='')\n@app.route(\"/\")\ndef chart():\n    return render_template('../Site web/Connexion - Université Laval.html')\n\nif __name__ == \"_main_\":\n    app.run(host='0.0.0.0', port=5001)\n\nif __name__ == \"__main__\":\n    app.run()\n\n'''\nfrom flask import Flask , render_template , request, Markup\nimport pymysql\nimport pymysql.cursors\nimport re\nfrom password import makehash\n\nlabels = [\n    'JAN', 'FEB', 'MAR', 'APR',\n    'MAY', 'JUN', 'JUL', 'AUG',\n    'SEP', 'OCT', 'NOV', 'DEC'\n]\n\nvalues = [1,2,3,4,5]\n\ncolors = [\n    \"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#FEDCBA\",\n    \"#ABCDEF\", \"#DDDDDD\", \"#ABCABC\", \"#4169E1\",\n    \"#C71585\", \"#FF4500\", \"#FEDCBA\", \"#46BFBD\"]\n\n\n\nconn = pymysql.connect(host='localhost',\n                           user='root',\n                           password='Reussite2019',\n                           db='bd_universitaire')\n\n\napp = Flask(__name__)\nProfileUtilisateur =  {}\n@app.route(\"/\")\ndef main():\n    return render_template('index.html')\n\n@app.route('/', methods=['GET','POST'])\ndef login():\n\n    if request.method == 'GET':\n        pass\n    if request.method == 'POST':\n        global idul\n        idul = '\"'+request.form.get('username')+'\"'\n        passe = makehash(request.form.get('password'))\n        cmd = 'SELECT motDePasse FROM Etudiant WHERE idul='+idul+';'\n        cur = conn.cursor()\n        cur.execute(cmd)\n        passeVrai = cur.fetchone()\n        if (passeVrai != None) and (passe == passeVrai[0]):\n            cmd = 'SELECT * FROM Etudiant WHERE idul='+idul+';'\n            cur = conn.cursor()\n            cur.execute(cmd)\n            info = cur.fetchone()\n\n\n            return render_template('Sanstitre-2.html')\n        return render_template('index.html', msg=\"Informations invalides!\")\n\n@app.route('//register', methods=['GET', 'POST'])\ndef register():\n\n    msg = ''\n    # Check if \"username\", \"password\" and \"email\" POST requests exist (user submitted form)\n    if request.method == 'POST' and 'username' in request.form and 'password' in request.form :\n        # Create variables for easy access\n        idul = \"'\" + request.form.get('username') + \"'\"\n        passe = \"'\" + makehash(request.form.get('password')) + \"'\"\n        password = request.form.get('password')\n        credit = request.form.get('credit')\n        nom = \"'\" + request.form.get('nom') + \"'\"\n        sigleProgramme = \"'\" + request.form.get('sigleProgramme') + \"'\"\n        motivation = 5\n\n        cmd = 'SELECT * FROM Etudiant WHERE idul='+ idul +';'\n        cur = conn.cursor()\n        cur.execute(cmd)\n        etudiant = cur.fetchone()\n        # If account exists show error and validation checks\n        if etudiant:\n            msg = 'Account already exists!'\n\n        else:\n            # Account doesnt exists and the form data is valid, now insert new account into accounts table\n            cmd='INSERT INTO Etudiant VALUES '+'('+ idul +','+ nom +','+ passe +','+ str(motivation) +',' +str(credit)+ ',' + sigleProgramme+ ')'+ ';'\n            cur = conn.cursor()\n            cur.execute(cmd)\n            conn.commit()\n            print (cmd)\n            msg = 'You have successfully registered!'\n\n    elif request.method == 'POST':\n        # Form is empty... (no POST data)\n        msg = 'Please fill out the form!'\n    # Show registration form with message (if any)\n    return render_template('register.html', msg=msg)\n\n@app.route(\"//Cours/Acceuil\")\ndef Acceuil():\n    return render_template('Sanstitre-2.html')\n\n@app.route(\"//Cours\")\ndef Cours():\n    cmd = 'SELECT c.nom FROM Cours c, Suivre s WHERE s.idul=' + idul + 'and c.sigleCours= s.sigleCours ;'\n    cur = conn.cursor()\n    cur.execute(cmd)\n\n    info = cur.fetchall()\n    global info1,info2,info3,info3,info4,info5,info5\n    info1 = str(info[0])[2:-3]\n    info2 = str(info[1])[2:-3]\n    info3 = str(info[2])[2:-3]\n    info4 = str(info[3])[2:-3]\n    info5 = str(info[4])[2:-3]\n    info6 = str(info[5])[2:-3]\n\n\n\n\n    print(info)\n    return render_template('Sanstitre-3.html', cours01=info1,cours02=info2,cours03=info3,cours04=info4,cours05=info5,cours06=info6)\n@app.route(\"//Cours/Calul\")\ndef Cours1():\n    cmd = 'SELECT c.sigleCours FROM Cours c WHERE c.nom=' + \"'\" +info1 +\"'\"+ ';'\n    cur = conn.cursor()\n    cur.execute(cmd)\n    sigleCours = str(cur.fetchone())[2:-3]\n\n    cmd = 'SELECT n.note FROM Note n  WHERE n.sigleCours =' +\"'\" +sigleCours +\"'\"+ 'and n.idul = '+idul+';'\n    print(cmd)\n    cur = conn.cursor()\n    cur.execute(cmd)\n    note = cur.fetchall()\n    note1 = []\n    nbr_exam =[]\n    for i in range((len(note))):\n        note1.append(str(note[i])[1:-2])\n    print(note)\n\n    for i in range((len(note))):\n        nbr_exam.append(\"NOTE\"+str(i+1))\n\n\n\n\n\n\n\n    bar_labels=labels\n    bar_values=values\n    return render_template('Sanstitre-6.html', max=100, labels=nbr_exam, values=note1)\n@app.route(\"//Cours/Calul2\")\ndef Cours2():\n    cmd = 'SELECT c.sigleCours FROM Cours c WHERE c.nom=' + \"'\" +info2+\"'\"+ ';'\n    cur = conn.cursor()\n    cur.execute(cmd)\n    sigleCours = str(cur.fetchone())[2:-3]\n\n    cmd = 'SELECT n.note FROM Note n  WHERE n.sigleCours =' +\"'\" +sigleCours +\"'\"+ 'and n.idul = '+idul+';'\n    print(cmd)\n    cur = conn.cursor()\n    cur.execute(cmd)\n    note = cur.fetchall()\n    note1 = []\n    nbr_exam =[]\n    for i in range((len(note))):\n        note1.append(str(note[i])[1:-2])\n    print(note)\n\n    for i in range((len(note))):\n        nbr_exam.append(\"NOTE\"+str(i+1))\n\n\n\n    bar_labels=labels\n    bar_values=values\n    return render_template('Sanstitre-6.html', max=100, labels=nbr_exam, values=note1)\n\n@app.route(\"//Cours/Calul3\")\ndef Cours3():\n    cmd = 'SELECT c.sigleCours FROM Cours c WHERE c.nom=' + \"'\" +info3+\"'\"+ ';'\n    cur = conn.cursor()\n    cur.execute(cmd)\n    sigleCours = str(cur.fetchone())[2:-3]\n\n    cmd = 'SELECT n.note FROM Note n  WHERE n.sigleCours =' +\"'\" +sigleCours +\"'\"+ 'and n.idul = '+idul+';'\n    print(cmd)\n    cur = conn.cursor()\n    cur.execute(cmd)\n    note = cur.fetchall()\n    note1 = []\n    nbr_exam =[]\n    for i in range((len(note))):\n        note1.append(str(note[i])[1:-2])\n    print(note)\n\n    for i in range((len(note))):\n        nbr_exam.append(\"NOTE\"+str(i+1))\n\n\n\n\n\n\n\n    bar_labels=labels\n    bar_values=values\n    return render_template('Sanstitre-6.html', max=100, labels=nbr_exam, values=note1)\n\n\n\n@app.route(\"//Cours/Calul4\")\ndef Cours4():\n    cmd = 'SELECT c.sigleCours FROM Cours c WHERE c.nom=' + \"'\" +info4+\"'\"+ ';'\n    cur = conn.cursor()\n    cur.execute(cmd)\n    sigleCours = str(cur.fetchone())[2:-3]\n\n    cmd = 'SELECT n.note FROM Note n  WHERE n.sigleCours =' +\"'\" +sigleCours +\"'\"+ 'and n.idul = '+idul+';'\n    print(cmd)\n    cur = conn.cursor()\n    cur.execute(cmd)\n    note = cur.fetchall()\n    note1 = []\n    nbr_exam =[]\n    for i in range((len(note))):\n        note1.append(str(note[i])[1:-2])\n    print(note)\n\n    for i in range((len(note))):\n        nbr_exam.append(\"NOTE\"+str(i+1))\n\n\n\n\n\n\n\n    bar_labels=labels\n    bar_values=values\n    return render_template('Sanstitre-6.html', max=100, labels=nbr_exam, values=note1)\n\n\n@app.route(\"//Cours/Calul5\")\ndef Cours5():\n    cmd = 'SELECT c.sigleCours FROM Cours c WHERE c.nom=' + \"'\" +info5+\"'\"+ ';'\n    cur = conn.cursor()\n    cur.execute(cmd)\n    sigleCours = str(cur.fetchone())[2:-3]\n\n    cmd = 'SELECT n.note FROM Note n  WHERE n.sigleCours =' +\"'\" +sigleCours +\"'\"+ 'and n.idul = '+idul+';'\n    print(cmd)\n    cur = conn.cursor()\n    cur.execute(cmd)\n    note = cur.fetchall()\n    note1 = []\n    nbr_exam =[]\n    for i in range((len(note))):\n        note1.append(str(note[i])[1:-2])\n    print(note)\n\n    for i in range((len(note))):\n        nbr_exam.append(\"NOTE\"+str(i+1))\n\n\n\n\n\n\n\n    bar_labels=labels\n    bar_values=values\n    return render_template('Sanstitre-6.html', max=100, labels=nbr_exam, values=note1)\n\n@app.route(\"//Cours/Profile\")\ndef Profile():\n    return render_template('Profile.html')\n\n\n\n\n\nif __name__ == \"__main__\":\n    app.run()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- bd_universitaire/app.py	(revision c613a6c42e4d78f74de928362f2c88c67af1b8da)
+++ bd_universitaire/app.py	(date 1588678679281)
@@ -171,7 +171,7 @@
 
     bar_labels=labels
     bar_values=values
-    return render_template('Sanstitre-6.html', max=100, labels=nbr_exam, values=note1)
+    return render_template('graphique.html', max=100, labels=nbr_exam, values=note1)
 @app.route("//Cours/Calul2")
 def Cours2():
     cmd = 'SELECT c.sigleCours FROM Cours c WHERE c.nom=' + "'" +info2+"'"+ ';'
